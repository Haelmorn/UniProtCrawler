import scrapy

genelist = [
    "arsC",
    "arsM",
    "copA",
    "czcD",
    "arrA",
    "merA",
    "arsB",
    "czcA",
    "chrB",
    "nccA",
    "chrA",
    "copB",
    "czcB",
    "czcC",
    "merB",
    "pcoA",
    "acr3",
    "acrD",
    "aioA",
    "aioB",
    "arsA",
    "cadA",
    "copC",
    "smtA",
    "yvgW",
    "mco", 
    "merE",
    "merF",
    "merP",
    "merT",
    "nirA",
    "tcrB",
    "zntA",
    "aoxB",
    "copZ",
    "dmeF",
    "actP",
    "aoxA",
    "arsD",
    "arsH",
    "cmeA",
    "cmeB",
    "cmeC",
    "ctpD",
    "cueO",
    "cusA",
    "cusC",
    "mdtA",
    "mdtB",
    "mrdH",
    "mreA",
    "pbrA",
    "pbrB",
    "rcnA",
    "zitB",
    "znuB",
    "znuC",
    "arxA",
    "cmtA",
    "ncrA",
    "nfsA",
    "nrsD",
    "srpC",
    "arrB",
    "arsP",
    "arxB1",
    "arxB2",
    "arxC",
    "cnrA",
    "arsI",
    "arsJ",
    "asoA",
    "asoB",
    "azoR",
    "cadB",
    "chrA1",
    "chrB1",
    "chrR",
    "cnrB",
    "cnrC",
    "ctpC",
    "ctpV",
    "cueA",
    "cueP",
    "cuiD",
    "cusB",
    "cutF",
    "cutO",
    "czcP",
    "cznA",
    "cznB",
    "cznC",
    "czrA",
    "czrB",
    "fieF",
    "mctB",
    "mdrL",
    "mdtC",
    "merG",
    "merH",
    "modA",
    "mymT",
    "nccB",
    "nccC",
    "nemA",
    "nia",
    "nirC",
    "nrsA",
    "nrsB",
    "pacS",
    "pfr",
    "yfmO",
    "zneB",
]


class UniprotSpider(scrapy.Spider):
    name = "upspider"
    download_timeout = 3600

    def start_requests(self):
        urls = [f"https://www.uniprot.org/uniprot/?query={gene}&sort=score&columns=id,genes(PREFERRED),sequence,existence,citation,protein names,database(EMBL),organism,lineage(SUPERKINGDOM)&limit=10" for gene in genelist]

        for url in urls:
            yield scrapy.Request(url=url, callback=self.parse)

    def parse(self, response):
        for row in response.xpath("//tbody//tr"):
            if (row.css("td::text").get() == "Evidence at protein level" and (row.xpath("td[3]//text()").extract_first() in genelist) and row.xpath("td[10]//text()").get() == 'Bacteria'):
                yield {
                    "UniprotID": row.xpath("td[2]//text()").extract_first(),
                    "Gene": row.xpath("td[3]//text()").extract_first(),
                    "Sequence": row.xpath("td[4]//text()").extract_first(),
                    "PMID": row.xpath("td[6]//text()").extract_first(),
                    "Function": row.xpath("td[7]//text()").extract_first(),
                    "EMBL_access_id": row.xpath("td[8]//text()").extract()[2],
                    "Organism": row.xpath("td[9]//text()").extract_first()
                }
